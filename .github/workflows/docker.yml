name: Build & Publish to Docker Hub
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  build_and_push:
    name: Build & Publish
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[no build]') == false
    strategy:
      matrix:
        include:
          - name: base
            path: ''
            suffix: ''
            qemu: false
          - name: arm32v7
            path: 'arm32v7.'
            suffix: '-arm'
            qemu: true
          - name: arm64
            path: 'arm64.'
            suffix: '-arm64'
            qemu: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        if: ${{ matrix.qemu == true }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: docker-buildx

      # - name: Login to DockerHub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.docker_hub_username }}
      #     password: ${{ secrets.docker_hub_access_token }}
      #   if: ${{ github.ref == 'refs/heads/main' }}

      - name: Ensure cache directory exists
        run: mkdir -p /tmp/.buildx-cache

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          # Cache key based on Dockerfile
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Extract Docker metadata
        id: extract-docker-metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            latest

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          builder: ${{ steps.docker-buildx.outputs.name }}
          context: .
          file: ./dummy.Dockerfile
          # file: ./${{ matrix.path }}Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.extract-docker-metadata.outputs.tags }}
          labels: ${{ steps.extract-docker-metadata.outputs.labels }},"arm64"
          cache-from: type=gha
          cache-to: type=gha,mode=max
        if: ${{ matrix.name != 'arm64' && matrix.name != 'arm32v7' }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          builder: ${{ steps.docker-buildx.outputs.name }}
          context: .
          file: ./dummy.Dockerfile
          # file: ./${{ matrix.path }}Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}
          platforms: 'linux/arm64'
          tags: ${{ steps.extract-docker-metadata.outputs.tags }},"arm64"
          labels: ${{ steps.extract-docker-metadata.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
        if: ${{ matrix.name == 'arm64' }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          builder: ${{ steps.docker-buildx.outputs.name }}
          context: .
          file: ./dummy.Dockerfile
          # file: ./${{ matrix.path }}Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}
          platforms: 'linux/arm/v7'
          tags: ${{ steps.extract-docker-metadata.outputs.tags }},"arm32v7"
          labels: ${{ steps.extract-docker-metadata.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
        if: ${{ matrix.name == 'arm32v7' }}
